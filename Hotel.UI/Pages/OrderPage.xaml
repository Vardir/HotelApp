<local:BasePage x:Class="HotelsApp.UI.Pages.OrderPage"
                x:TypeArguments="vm:OrderPageViewModel"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:HotelsApp.UI.Pages"
                xmlns:conv="clr-namespace:HotelsApp.UI.ValueConverters"
                xmlns:vm="clr-namespace:HotelsApp.Core.ViewModels;assembly=HotelsApp.Core"
                xmlns:dm="clr-namespace:HotelsApp.Core.DesignModels;assembly=HotelsApp.Core"
                xmlns:c="clr-namespace:HotelsApp.UI.ValueConverters"
                xmlns:ctr="clr-namespace:HotelsApp.UI.Controls"
                xmlns:s="clr-namespace:System;assembly=mscorlib"
                xmlns:v="clr-namespace:HotelsApp.Core.Validation;assembly=HotelsApp.Core"
                xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                FontSize="{StaticResource FontSizeRegular}"
                mc:Ignorable="d" 
                d:DataContext="{x:Static dm:OrderPageDesignModel.Instance}"
                d:DesignWidth="800">
    <Grid Background="{StaticResource BackgroundUltraLightBrush}"
          HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>        

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button Content="{StaticResource KeyBackIcon}"
                    FontFamily="{StaticResource FontAwesome}"
                    Style="{StaticResource CommandButton}"
                    FontSize="{StaticResource FontSizeLarge}"
                    HorizontalAlignment="Left"
                    Command="{Binding GoBackCommand}"/>
            
            <Border Grid.ColumnSpan="3" HorizontalAlignment="Center"
                    Padding="15 0 15 0"
                    BorderThickness="0 0 0 1" BorderBrush="{StaticResource BackgroundVeryDarkBrush}">
                <TextBlock Text="Order" Style="{StaticResource BaseTextBlockStyle}"
                           FontSize="{StaticResource FontSizeXLarge}"/>
            </Border>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Border Grid.ColumnSpan="3"
                        BorderBrush="{StaticResource BackgroundDarkBrush}"
                        BorderThickness="0 0 0 1"
                        Margin="0 0 0 10">
                    <TextBlock Text="Select period:"                           
                           FontSize="{StaticResource FontSizeLarge}"/>
                </Border>
                <TextBlock Text="Check-in date"
                           Grid.Row="1" FontSize="{StaticResource FontSizeRegular}"/>
                <DatePicker IsTodayHighlighted="True" SelectedDateFormat="Short"
                            x:Name="checkInDate" Grid.Row="2"
                            SelectedDate="{Binding Order.CheckInDate}"/>
                <TextBlock Text="Check-out date"
                           Grid.Row="1" Grid.Column="2"
                           FontSize="{StaticResource FontSizeRegular}"/>
                <DatePicker IsTodayHighlighted="True" SelectedDateFormat="Short"
                            x:Name="checkOutDate" Margin="5 0 0 0"
                            Grid.Row="2" Grid.Column="2"
                            SelectedDate="{Binding Order.CheckOutDate}"
                            DisplayDateStart="{Binding Order.CheckInDate}"/>
                <TextBlock Grid.Row="4">
                    <Run Text="{Binding Order.Days}"/><Run Text="-night stay"/>
                </TextBlock>
                <Button Content="Search rooms"
                        Grid.Row="4" Grid.Column="2"
                        Command="{Binding SearchCommand}"/>
            </Grid>

            <Border Grid.Column="2" Grid.Row="2" Padding="10"
                    BorderBrush="Silver" BorderThickness="1">
                <Grid DataContext="{Binding RoomType}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock FontSize="{StaticResource FontSizeXLarge}" 
                           Foreground="{StaticResource ForegroundLightBlueBrush}"
                           Text="{Binding Title}"/>
                    <TextBlock FontSize="{StaticResource FontSizeRegular}"
                            Foreground="{StaticResource ForegroundBlueBrush}"
                            Grid.Row="2" Grid.Column="2">                    
                     <Run Text="{Binding Fits}"/> <Run Text="fits"/> <Run Text="{StaticResource BedIcon}"
                                                       FontFamily="{StaticResource FontAwesome}"/>
                    </TextBlock>

                    <TextBlock Text="NO PREPAYMENT NEEDED – pay at the property" 
                           Visibility="{Binding NeedsPrepay, Converter={conv:BoolToVisibilityConverter}, ConverterParameter=True}"
                           TextWrapping="Wrap" HorizontalAlignment="Center" Grid.Row="4"
                           Foreground="{StaticResource ForegroundGreenBrush}"/>

                    <TextBlock Grid.Row="2"
                           FontSize="{StaticResource FontSizeLarge}">
                    <Run Text="Price for night:"/> <Run Text="$"/><Run Text="{Binding PricePerFit}"/>
                    </TextBlock>
                </Grid>
            </Border>
            
        </Grid>

        <Border Grid.Row="1"
                BorderBrush="{StaticResource BackgroundDarkBrush}"
                BorderThickness="0 1 0 0"
                Margin="0 20 0 0" Padding="0 10 0 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="10"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Border BorderBrush="Silver" BorderThickness="1"
                        Grid.ColumnSpan="3"/>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Text="How many fits do you need?"/>
                    <ctr:NumericUpDown Grid.Row="1" Min="1" Max="100"
                                       Width="60" HorizontalAlignment="Left"
                                       Value="{Binding Order.Fits, Mode=TwoWay}"/>
                    <TextBlock Grid.Column="2">
                        <Run Text="(Rooms available:"/> <Run Text="{Binding Rooms.Count, Mode=OneWay}"/><Run Text=")"/>
                    </TextBlock>
                </Grid>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock>
                        <Run Text="Total rooms:"/> <Run Text="{Binding RoomsOrdered}"/>
                    </TextBlock>
                    <TextBlock Grid.Row="1">
                        <Run Text="Total price: $"/><Run Text="{Binding Order.TotalPrice}"/>
                    </TextBlock>
                    <TextBlock Grid.Column="2" Grid.RowSpan="2"
                               TextWrapping="Wrap" Foreground="Red"
                               Text="Cant afford such rooms count">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{c:IsGreaterToVisibilityConverter}">
                                <Binding Path="RoomsOrdered" />
                                <Binding Path="Rooms.Count" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Text="Name" VerticalAlignment="Center" />
                    <TextBox Grid.Column="1" x:Name="customerNameBox">
                        <TextBox.Text>
                            <Binding Path="CustomerName" NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <ExceptionValidationRule/>
                                    <v:NameValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock Text="Last name" VerticalAlignment="Center"
                               Grid.Row="2"/>
                    <TextBox Grid.Column="1" Grid.Row="2" x:Name="customerLastnameBox">
                        <TextBox.Text>
                            <Binding Path="CustomerLastname" NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <ExceptionValidationRule/>
                                    <v:NameValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Email" VerticalAlignment="Center" />
                    <TextBox Grid.Column="1" x:Name="emailBox">
                        <TextBox.Text>
                            <Binding Path="Email" NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <ExceptionValidationRule/>
                                    <v:EmailValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock Text="Confirm email" VerticalAlignment="Center"
                               Grid.Row="2"/>
                    <TextBox Grid.Column="1" Grid.Row="2" x:Name="emailConfirmationBox">
                        <TextBox.Text>
                            <Binding Path="ConfirmationEmail" NotifyOnValidationError="True"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <ExceptionValidationRule/>
                                    <v:StringEqualityValidationRule>
                                        <v:StringEqualityValidationRule.MainValue>
                                            <v:StringValue Value="{Binding Text, ElementName=emailBox}"/>
                                        </v:StringEqualityValidationRule.MainValue>
                                    </v:StringEqualityValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </Grid>
        </Border>

        <Border Grid.Row="3" BorderBrush="Silver" BorderThickness="1"
                Visibility="{Binding RoomType.NeedsPrepay, Converter={c:BoolToVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Credit card" VerticalAlignment="Center" />
                <xctk:MaskedTextBox Grid.Column="1" HorizontalAlignment="Left"
                                    Mask="0000-0000-0000-0000" x:Name="cardCode">
                    <xctk:MaskedTextBox.Text>
                        <Binding Path="CardCode" NotifyOnValidationError="True"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <ExceptionValidationRule/>
                                <v:CreditCardCodeValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </xctk:MaskedTextBox.Text>
                </xctk:MaskedTextBox>
                
                <TextBlock Text="CVV" VerticalAlignment="Center"
                           Grid.Row="2"/>
                <xctk:MaskedTextBox Grid.Column="1" HorizontalAlignment="Left" Grid.Row="2"
                                    Mask="00-00" x:Name="cardCVV">
                    <xctk:MaskedTextBox.Text>
                        <Binding Path="CVV" NotifyOnValidationError="True"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <ExceptionValidationRule/>
                                <v:CVVCodeValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </xctk:MaskedTextBox.Text>
                </xctk:MaskedTextBox>                
            </Grid>
        </Border>

        <Button Content="Confirm" Grid.Row="5"
                Command="{Binding ConfirmCommand}"
                HorizontalAlignment="Center" Padding="30 10"
                IsEnabled="{Binding RoomsSearched}"/>
    </Grid>
</local:BasePage>